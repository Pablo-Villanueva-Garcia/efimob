{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Pablo\\\\proyectosmaster\\\\SEMANA 7\\\\FRONTEND USE DATABASES RECIPES WEEK 6 (victor)\\\\frontrecipes\\\\src\\\\pages\\\\Recipes\\\\one_recipe\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { BrowserRouter as Router, Switch, Route, Link, useParams, useHistory } from \"react-router-dom\";\nimport { useRecipe } from \"../../../api/index\";\n/*En este componente vamos a crear un boton de retorno a la pagina anterior usando el hook useHistory \r\nque trabaja con el historial de navegacion para poder manipularlo , con las funciones de router podremos \r\ndarle el uso mas adecudo a nuestro caso , actualmente utilzamos con el useHistory la funcion goback\r\nque recogera los datos de la anterior pagina para que podamos retornar a ella.\r\n*/\n\nconst GoBackButton = () => {\n  _s();\n\n  let historty = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: historty.goBack,\n    children: \"Atras\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n/*Para ver una receta nuestro componente contiene la const que recogera la id y el Hook useParams para identificar el parametro que llega\r\nlo que nos permitira recogerlo y utilizarlosabe cual es la receta y enrutarla gracias al uso de Router */\n\n\n_s(GoBackButton, \"FRhHQYJzZiWcNIeOy3A7jTUTtXA=\", false, function () {\n  return [useHistory];\n});\n\n_c = GoBackButton;\nexport const OneRecipe = () => {\n  _s2();\n\n  const {\n    id\n  } = useParams();\n  const recipes = useRecipe(id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Receta:\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: recipes.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), recipes.keywords, /*#__PURE__*/_jsxDEV(\"img\", {\n      style: \"width:40px\",\n      src: recipes.photo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GoBackButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n/*Al no tener un valor incial recipes es undefine y al determinar un valor en useeffect no renderizaba , \r\n  de mantener la api sin cambios podriamos hacer la ternaria que esta comentada para renderizarlo cuando tenga valor\r\n  sino lo apropiado es darle un objeto como primer valor al usestate y no tendremos mayor problema , tambien podemos\r\n  utilizar un if condicional para cuando el valor entre como vacio */\n\n_s2(OneRecipe, \"/RRdMEfuawk2E6lcIxjzBFDJhoc=\", false, function () {\n  return [useParams, useRecipe];\n});\n\n_c2 = OneRecipe;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GoBackButton\");\n$RefreshReg$(_c2, \"OneRecipe\");","map":{"version":3,"sources":["C:/Pablo/proyectosmaster/SEMANA 7/FRONTEND USE DATABASES RECIPES WEEK 6 (victor)/frontrecipes/src/pages/Recipes/one_recipe/index.js"],"names":["BrowserRouter","Router","Switch","Route","Link","useParams","useHistory","useRecipe","GoBackButton","historty","goBack","OneRecipe","id","recipes","title","keywords","photo"],"mappings":";;;;;;AAAA,SACIA,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,IAJJ,EAKIC,SALJ,EAMIC,UANJ,QAOO,kBAPP;AAQA,SAAQC,SAAR,QAAwB,oBAAxB;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC1B,MAAIC,QAAQ,GAAGH,UAAU,EAAzB;AACA,sBACG;AAAQ,IAAA,OAAO,EAAEG,QAAQ,CAACC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAGA,CALD;AAUA;AACA;;;GAXMF,Y;UACUF,U;;;KADVE,Y;AAeN,OAAO,MAAMG,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAACC,IAAAA;AAAD,MAAMP,SAAS,EAArB;AACA,QAAMQ,OAAO,GAAGN,SAAS,CAACK,EAAD,CAAzB;AAEA,sBACI;AAAA,uCAGI;AAAA,gBAAKC,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,YAHJ,EAKKD,OAAO,CAACE,QALb,eAMI;AAAK,MAAA,KAAK,EAAC,YAAX;AAAwB,MAAA,GAAG,EAAEF,OAAO,CAACG;AAArC;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAhBM;AAkBP;AACA;AACA;AACA;;IArBaL,S;UACGN,S,EACIE,S;;;MAFPI,S","sourcesContent":["import {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport {useRecipe} from \"../../../api/index\";\r\n\r\n/*En este componente vamos a crear un boton de retorno a la pagina anterior usando el hook useHistory \r\nque trabaja con el historial de navegacion para poder manipularlo , con las funciones de router podremos \r\ndarle el uso mas adecudo a nuestro caso , actualmente utilzamos con el useHistory la funcion goback\r\nque recogera los datos de la anterior pagina para que podamos retornar a ella.\r\n*/\r\nconst GoBackButton = () => {\r\n let historty = useHistory();\r\n return (\r\n    <button onClick={historty.goBack}>Atras</button>\r\n )\r\n}\r\n\r\n\r\n\r\n\r\n/*Para ver una receta nuestro componente contiene la const que recogera la id y el Hook useParams para identificar el parametro que llega\r\nlo que nos permitira recogerlo y utilizarlosabe cual es la receta y enrutarla gracias al uso de Router */\r\n\r\n\r\n\r\nexport const OneRecipe = () => {\r\n    const {id}= useParams();\r\n    const recipes = useRecipe(id);\r\n \r\n    return(\r\n        <div>\r\n            Receta:\r\n            {/*recipes && <h1>{recipes.title}</h1>*/}\r\n            <h1>{recipes.title}</h1>\r\n            {/*keywords.map(keywords=><span>{keywords}</span>)NO LO HACE */}\r\n            {recipes.keywords}\r\n            <img style=\"width:40px\" src={recipes.photo}></img>\r\n            <p></p>\r\n            <GoBackButton/>\r\n        </div>\r\n        )\r\n}\r\n\r\n/*Al no tener un valor incial recipes es undefine y al determinar un valor en useeffect no renderizaba , \r\n  de mantener la api sin cambios podriamos hacer la ternaria que esta comentada para renderizarlo cuando tenga valor\r\n  sino lo apropiado es darle un objeto como primer valor al usestate y no tendremos mayor problema , tambien podemos\r\n  utilizar un if condicional para cuando el valor entre como vacio */  \r\n    \r\n\r\n    "]},"metadata":{},"sourceType":"module"}