{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\"; //componente que se comunica con el backend de express\n\nexport const GetRecipesList = () => {\n  _s();\n\n  /*La forma mas basica de traernos el contenido de la api es utilizando un usestate para recoger valores y \r\n  y un useeffect para ejecutar el fetch y dando el valor de la response al set */\n  const [response, setResponse] = useState();\n  useEffect(() => {\n    fetch('http://localhost:8000/recipes', {\n      method: 'GET'\n    }).then(response => response.json()).then(response => {\n      setResponse(response);\n    });\n  }, []);\n  return response;\n};\n\n_s(GetRecipesList, \"WYJMalD1OXyA3NQCMZtroVUOh7E=\");\n\n_c = GetRecipesList;\nexport const UseRecipe = id => {\n  _s2();\n\n  /*La forma mas basica de traernos el contenido de la api es utilizando un usestate para recoger valores y \r\n  y un useeffect para ejecutar el fetch y dando el valor de la response al set \r\n  En este segundo caso usamos la id para traernos una receta en concreto por su identificador */\n  const [response, setResponse] = useState({});\n  useEffect(() => {\n    fetch('http://localhost:8000/recipes/' + id, {\n      method: 'GET'\n    }).then(response => response.json()).then(response => {\n      setResponse(response);\n    });\n  }, [id]);\n  return response;\n};\n\n_s2(UseRecipe, \"PPdBA4WNWUy55EY/yE+UpOAsHy0=\");\n\n_c2 = UseRecipe;\nexport const UseDeleteRecipe = id => {\n  return () => fetch('http://localhost:8000/recipes/' + id, {\n    method: 'DELETE'\n  });\n};\n_c3 = UseDeleteRecipe;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GetRecipesList\");\n$RefreshReg$(_c2, \"UseRecipe\");\n$RefreshReg$(_c3, \"UseDeleteRecipe\");","map":{"version":3,"sources":["C:/Pablo/proyectosmaster/SEMANA 7/FRONTEND USE DATABASES RECIPES WEEK 6 (victor)/frontrecipes/src/hooks/api/index.js"],"names":["useEffect","useState","GetRecipesList","response","setResponse","fetch","method","then","json","UseRecipe","id","UseDeleteRecipe"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACjC;AACH;AACA,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBH,QAAQ,EAArC;AACAD,EAAAA,SAAS,CAAG,MAAM;AACVK,IAAAA,KAAK,CAAC,+BAAD,EACL;AACIC,MAAAA,MAAM,EAAC;AADX,KADK,CAAL,CAGGC,IAHH,CAGQJ,QAAQ,IAAIA,QAAQ,CAACK,IAAT,EAHpB,EAICD,IAJD,CAIMJ,QAAQ,IAAI;AACdC,MAAAA,WAAW,CAACD,QAAD,CAAX;AAEH,KAPD;AAQH,GATI,EASH,EATG,CAAT;AAUI,SAAOA,QAAP;AACH,CAfM;;GAAMD,c;;KAAAA,c;AAkBb,OAAO,MAAMO,SAAS,GAAIC,EAAD,IAAQ;AAAA;;AAC7B;AACJ;AACA;AAEC,QAAM,CAACP,QAAD,EAAUC,WAAV,IAAuBH,QAAQ,CAAC,EAAD,CAArC;AACAD,EAAAA,SAAS,CAAG,MAAM;AACVK,IAAAA,KAAK,CAAC,mCAAkCK,EAAnC,EACL;AACIJ,MAAAA,MAAM,EAAC;AADX,KADK,CAAL,CAGGC,IAHH,CAGQJ,QAAQ,IAAIA,QAAQ,CAACK,IAAT,EAHpB,EAICD,IAJD,CAIMJ,QAAQ,IAAI;AACdC,MAAAA,WAAW,CAACD,QAAD,CAAX;AAIH,KATD;AAUH,GAXI,EAWH,CAACO,EAAD,CAXG,CAAT;AAaI,SAAOP,QAAP;AACJ,CApBM;;IAAMM,S;;MAAAA,S;AAuBb,OAAO,MAAME,eAAe,GAAID,EAAD,IAAQ;AACtC,SAAO,MACNL,KAAK,CAAC,mCAAkCK,EAAnC,EACH;AACCJ,IAAAA,MAAM,EAAC;AADR,GADG,CADN;AAKA,CANM;MAAMK,e","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n//componente que se comunica con el backend de express\r\nexport const GetRecipesList = () => {\r\n   /*La forma mas basica de traernos el contenido de la api es utilizando un usestate para recoger valores y \r\ny un useeffect para ejecutar el fetch y dando el valor de la response al set */\r\nconst [response,setResponse]=useState();\r\nuseEffect ( () => {\r\n        fetch('http://localhost:8000/recipes',\r\n        {\r\n            method:'GET',\r\n        }).then(response => response.json())\r\n        .then(response => {\r\n            setResponse(response);\r\n            \r\n        })\r\n    },[]);\r\n    return response;\r\n}\r\n\r\n\r\nexport const UseRecipe = (id) => {\r\n    /*La forma mas basica de traernos el contenido de la api es utilizando un usestate para recoger valores y \r\n y un useeffect para ejecutar el fetch y dando el valor de la response al set \r\n En este segundo caso usamos la id para traernos una receta en concreto por su identificador */\r\n \r\n const [response,setResponse]=useState({});\r\n useEffect ( () => {\r\n         fetch('http://localhost:8000/recipes/'+ id,\r\n         {\r\n             method:'GET',\r\n         }).then(response => response.json())\r\n         .then(response => {\r\n             setResponse(response);\r\n         \r\n            \r\n           \r\n         })\r\n     },[id]);\r\n     \r\n     return response;\r\n}\r\n\r\n\r\nexport const UseDeleteRecipe = (id) => {\r\n return () => \r\n  fetch('http://localhost:8000/recipes/'+ id,\r\n    {\r\n     method:'DELETE',\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}