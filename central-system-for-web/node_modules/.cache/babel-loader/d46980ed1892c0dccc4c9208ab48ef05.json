{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pablovg/Documentos/MASTER FULL STACK/SEMANA 8/PRACTICAS/RECIPES&MONGO (Con mongoose)/FRONTEND RECIPES/frontrecipes/src/pages/Recipes/edit_recipe/editrecipe.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { UseCreateRecipe, UseRecipe, UseEditRecipe } from \"../../../hooks/api/index\";\nimport { usePages } from \"../../../hooks/usePages/Usepages\";\nimport { useParams, useHistory } from \"react-router-dom\";\nexport const Editrecipe = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const recipe = UseRecipe(id);\n  const {\n    gotolist\n  } = usePages();\n  const {\n    gotorecipespage\n  } = usePages(); //const titleref = useRef();\n  //const keywordsref = useRef();\n\n  const [title, setTitle] = useState();\n  const [keywords, setKeywords] = useState();\n  useEffect(() => {\n    if (recipe) {\n      setTitle(recipe.title);\n      setKeywords(recipe.keywords\n      /*.join(',') ¿porque join es undifined ?*/\n      );\n    }\n  }, [recipe]);\n  const {\n    loading,\n    editRecipes\n  } = UseEditRecipe(id);\n\n  const handle_edit = () => {\n    const body = {\n      title,\n      keywords: keywords\n    };\n    editRecipes(body).then(response => gotorecipespage(response.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"xs100 just_center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_dir_col centrado\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Editar Receta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"xs70 flex_dir_col ali_center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"xs50 mb20\",\n          type: \"text\",\n          placeholder: \"editar receta\",\n          onChange: e => setTitle(e.target.value),\n          value: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"xs50 mb20\",\n          type: \"text\",\n          placeholder: \"editar Keywords\",\n          onChange: e => setKeywords(e.target.value),\n          value: keywords\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"xs30\",\n          onClick: handle_edit,\n          disabled: loading,\n          children: loading ? \"Loading\" : \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Editrecipe, \"ZuGLo54f0cnFsQzk0UiPlSwTyG0=\", false, function () {\n  return [useParams, usePages, usePages];\n});\n\n_c = Editrecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editrecipe\");","map":{"version":3,"sources":["/home/pablovg/Documentos/MASTER FULL STACK/SEMANA 8/PRACTICAS/RECIPES&MONGO (Con mongoose)/FRONTEND RECIPES/frontrecipes/src/pages/Recipes/edit_recipe/editrecipe.js"],"names":["useEffect","useRef","useState","UseCreateRecipe","UseRecipe","UseEditRecipe","usePages","useParams","useHistory","Editrecipe","id","recipe","gotolist","gotorecipespage","title","setTitle","keywords","setKeywords","loading","editRecipes","handle_edit","body","then","response","e","target","value"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,0BAA1D;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,SACIC,SADJ,EAEIC,UAFJ,QAGO,kBAHP;AAKA,OAAO,MAAMC,UAAU,GAAG,MAAK;AAAA;;AAE3B,QAAM;AAACC,IAAAA;AAAD,MAAMH,SAAS,EAArB;AACA,QAAMI,MAAM,GAAGP,SAAS,CAACM,EAAD,CAAxB;AACA,QAAM;AAACE,IAAAA;AAAD,MAAWN,QAAQ,EAAzB;AACA,QAAM;AAACO,IAAAA;AAAD,MAAmBP,QAAQ,EAAjC,CAL2B,CAM3B;AACA;;AACA,QAAM,CAACQ,KAAD,EAAOC,QAAP,IAAiBb,QAAQ,EAA/B;AACA,QAAM,CAACc,QAAD,EAAUC,WAAV,IAAuBf,QAAQ,EAArC;AACAF,EAAAA,SAAS,CAAE,MAAM;AACb,QAAGW,MAAH,EAAU;AACNI,MAAAA,QAAQ,CAACJ,MAAM,CAACG,KAAR,CAAR;AACAG,MAAAA,WAAW,CAACN,MAAM,CAACK;AAAS;AAAjB,OAAX;AACH;AACJ,GALQ,EAKP,CAACL,MAAD,CALO,CAAT;AASA,QAAK;AAACO,IAAAA,OAAD;AAASC,IAAAA;AAAT,MAAuBd,aAAa,CAACK,EAAD,CAAzC;;AAEA,QAAMU,WAAW,GAAG,MAAK;AAErB,UAAMC,IAAI,GAAC;AACPP,MAAAA,KADO;AAEPE,MAAAA,QAAQ,EAACA;AAFF,KAAX;AAIAG,IAAAA,WAAW,CAACE,IAAD,CAAX,CAAkBC,IAAlB,CAAuBC,QAAQ,IAAEV,eAAe,CAACU,QAAQ,CAACb,EAAV,CAAhD;AACH,GAPD;;AAQA,sBACA;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,WAAjB;AAA6B,UAAA,IAAI,EAAC,MAAlC;AAAyC,UAAA,WAAW,EAAC,eAArD;AAAwE,UAAA,QAAQ,EAAEc,CAAC,IAAET,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7F;AAA+G,UAAA,KAAK,EAAEZ;AAAtH;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,SAAS,EAAC,WAAjB;AAA6B,UAAA,IAAI,EAAC,MAAlC;AAAyC,UAAA,WAAW,EAAC,iBAArD;AAAwE,UAAA,QAAQ,EAAEU,CAAC,IAAEP,WAAW,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhG;AAAkH,UAAA,KAAK,EAAEV;AAAzH;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAyB,UAAA,OAAO,EAAEI,WAAlC;AAA+C,UAAA,QAAQ,EAAEF,OAAzD;AAAA,oBACKA,OAAO,GAAG,SAAH,GAAe;AAD3B;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAkBH,CA/CM;;GAAMT,U;UAEGF,S,EAEKD,Q,EACQA,Q;;;KALhBG,U","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { UseCreateRecipe, UseRecipe ,UseEditRecipe } from \"../../../hooks/api/indexr\nimport { usePages } from \"../../../hooks/usePages/Usepages\";\r\nimport {\r\n    useParams,\r\n    useHistory\r\n} from \"react-router-dom\";\r\n\r\nexport const Editrecipe = () =>{\r\n    \r\n    const {id}= useParams();\r\n    const recipe = UseRecipe(id);\r\n    const {gotolist}=usePages();\r\n    const {gotorecipespage}= usePages();\r\n    //const titleref = useRef();\r\n    //const keywordsref = useRef();\r\n    const [title,setTitle]=useState();\r\n    const [keywords,setKeywords]=useState();\r\n    useEffect( () => {\r\n        if(recipe){\r\n            setTitle(recipe.title);\r\n            setKeywords(recipe.keywords /*.join(',') ¿porque join es undifined ?*/);\r\n        }\r\n    },[recipe]);\r\n    \r\n\r\n\r\n    const{loading,editRecipes}= UseEditRecipe(id);\r\n\r\n    const handle_edit = () =>{\r\n      \r\n        const body={\r\n            title,\r\n            keywords:keywords,\r\n        }\r\n        editRecipes(body).then(response=>gotorecipespage(response.id));\r\n    }\r\n    return(\r\n    <div className=\"xs100 just_center\">\r\n        <div className=\"flex_dir_col centrado\">\r\n    \r\n       \r\n        <h1>Editar Receta</h1>\r\n        <div className=\"xs70 flex_dir_col ali_center\">\r\n            <input className=\"xs50 mb20\" type=\"text\" placeholder=\"editar receta\"    onChange={e=>setTitle(e.target.value)} value={title}></input>\r\n            <input className=\"xs50 mb20\" type=\"text\" placeholder=\"editar Keywords\"  onChange={e=>setKeywords(e.target.value)} value={keywords}></input>\r\n            <button className=\"xs30\" onClick={handle_edit} disabled={loading}>\r\n                {loading ? \"Loading\" : \"Editar\"}\r\n                </button>\r\n        </div>\r\n        \r\n            \r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}